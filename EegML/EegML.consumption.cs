// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace EegML
{
    public partial class EegML
    {
        /// <summary>
        /// model input class for EegML.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(0)]
            [ColumnName(@"Prediction")]
            public float Prediction { get; set; }

            [LoadColumn(1)]
            [ColumnName(@"Delta_AF7")]
            public float Delta_AF7 { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"Delta_AF8")]
            public float Delta_AF8 { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"Delta_TP10")]
            public float Delta_TP10 { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"Theta_TP9")]
            public float Theta_TP9 { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"Theta_AF7")]
            public float Theta_AF7 { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"Theta_AF8")]
            public float Theta_AF8 { get; set; }

            [LoadColumn(7)]
            [ColumnName(@"Theta_TP10")]
            public float Theta_TP10 { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"Alpha_TP9")]
            public float Alpha_TP9 { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"Alpha_AF7")]
            public float Alpha_AF7 { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"Alpha_AF8")]
            public float Alpha_AF8 { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"Alpha_TP10")]
            public float Alpha_TP10 { get; set; }

            [LoadColumn(12)]
            [ColumnName(@"Beta_TP9")]
            public float Beta_TP9 { get; set; }

            [LoadColumn(13)]
            [ColumnName(@"Beta_AF7")]
            public float Beta_AF7 { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"Beta_AF8")]
            public float Beta_AF8 { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"Beta_TP10")]
            public float Beta_TP10 { get; set; }

            [LoadColumn(16)]
            [ColumnName(@"Gamma_TP9")]
            public float Gamma_TP9 { get; set; }

            [LoadColumn(17)]
            [ColumnName(@"Gamma_AF7")]
            public float Gamma_AF7 { get; set; }

            [LoadColumn(18)]
            [ColumnName(@"Gamma_AF8")]
            public float Gamma_AF8 { get; set; }

            [LoadColumn(19)]
            [ColumnName(@"Gamma_TP10")]
            public float Gamma_TP10 { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for EegML.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Prediction")]
            public float Prediction { get; set; }

            [ColumnName(@"Delta_AF7")]
            public float Delta_AF7 { get; set; }

            [ColumnName(@"Delta_AF8")]
            public float Delta_AF8 { get; set; }

            [ColumnName(@"Delta_TP10")]
            public float Delta_TP10 { get; set; }

            [ColumnName(@"Theta_TP9")]
            public float Theta_TP9 { get; set; }

            [ColumnName(@"Theta_AF7")]
            public float Theta_AF7 { get; set; }

            [ColumnName(@"Theta_AF8")]
            public float Theta_AF8 { get; set; }

            [ColumnName(@"Theta_TP10")]
            public float Theta_TP10 { get; set; }

            [ColumnName(@"Alpha_TP9")]
            public float Alpha_TP9 { get; set; }

            [ColumnName(@"Alpha_AF7")]
            public float Alpha_AF7 { get; set; }

            [ColumnName(@"Alpha_AF8")]
            public float Alpha_AF8 { get; set; }

            [ColumnName(@"Alpha_TP10")]
            public float Alpha_TP10 { get; set; }

            [ColumnName(@"Beta_TP9")]
            public float Beta_TP9 { get; set; }

            [ColumnName(@"Beta_AF7")]
            public float Beta_AF7 { get; set; }

            [ColumnName(@"Beta_AF8")]
            public float Beta_AF8 { get; set; }

            [ColumnName(@"Beta_TP10")]
            public float Beta_TP10 { get; set; }

            [ColumnName(@"Gamma_TP9")]
            public float Gamma_TP9 { get; set; }

            [ColumnName(@"Gamma_AF7")]
            public float Gamma_AF7 { get; set; }

            [ColumnName(@"Gamma_AF8")]
            public float Gamma_AF8 { get; set; }

            [ColumnName(@"Gamma_TP10")]
            public float Gamma_TP10 { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        public static string MLNetModelPath = Path.GetFullPath("EegML.mlnet");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }
    }
}
